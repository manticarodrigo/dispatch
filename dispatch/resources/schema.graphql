type Query {
  user: User
  seats: [Seat]
  seat(id: ID!): Seat
  addresses: [Address]
  routes: [Route]
}

type Mutation {
  createUser(email: String!, password: String!): String!
  loginUser(email: String!, password: String!): String!
  createSeat(name: String!): String!
  createAddress(
    name: String!
    description: String!
    lat: Float!
    lng: Float!
  ): String!
  createRoute(seatId: ID!, startAt: String!, addressIds: [ID]!): String!
}

type User {
  id: ID!
  email: String!
  seats: [Seat]
  addresses: [Address]
}

type Seat {
  id: ID!
  name: String!
  routes: [Route]
}

type Address {
  id: ID!
  name: String!
  description: String!
  lat: String!
  lng: String!
}

type Stop {
  id: ID!
  address: Address!
}

type Route {
  id: ID!
  seat: Seat!
  startAt: String!
  stops: [Stop]!
}
