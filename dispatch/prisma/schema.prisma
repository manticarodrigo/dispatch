generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @unique @default(uuid())
  email     String    @unique
  password  String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  sessions  Session[]
  seats     Seat[]
  places    Place[]
  tasks     Task[]
}

model Session {
  id        String   @id @unique @default(uuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  createdAt DateTime @default(now())
}

model Device {
  id        String   @id @unique @default(uuid())
  info      Json
  seat      Seat     @relation(fields: [seatId], references: [id])
  seatId    String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Seat {
  id         String     @id @unique @default(uuid())
  name       String
  device     Device?
  user       User       @relation(fields: [userId], references: [id])
  userId     String
  location   Location?  @relation("SeatLocation", fields: [locationId], references: [id])
  locationId String?    @unique
  locations  Location[] @relation("SeatLocations")
  tasks      Task[]
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
}

model Location {
  id         String   @id @unique @default(uuid())
  position   Json
  currentFor Seat?    @relation("SeatLocation")
  seat       Seat     @relation("SeatLocations", fields: [seatId], references: [id])
  seatId     String
  createdAt  DateTime @default(now())
}

model Place {
  id          String     @id @unique @default(uuid())
  name        String
  phone       String?
  email       String?
  description String
  lat         Float
  lng         Float
  user        User       @relation(fields: [userId], references: [id])
  userId      String
  waypoints   Waypoint[]
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

model Task {
  id        String     @id @unique @default(uuid())
  user      User       @relation(fields: [userId], references: [id])
  userId    String
  seat      Seat       @relation(fields: [seatId], references: [id])
  seatId    String
  waypoints Waypoint[]
  route     Json
  startAt   DateTime
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model Waypoint {
  id        String    @id @unique @default(uuid())
  task      Task      @relation(fields: [taskId], references: [id])
  taskId    String
  place     Place     @relation(fields: [placeId], references: [id])
  placeId   String
  order     Int
  note      String?
  arrivedAt DateTime?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}
